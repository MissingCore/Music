diff --git a/dist/Slider.js b/dist/Slider.js
index 242b83b5325bb5db4bd64a176a95176675c8ca73..bba3f83b575ba80d923cbc88d412ec3465135d7f 100644
--- a/dist/Slider.js
+++ b/dist/Slider.js
@@ -42,7 +42,7 @@ const Slider = react_1.default.forwardRef((props, forwardedRef) => {
     const marksProps = { StepMarker, step, minimumValue, maximumValue, activeValue: value, inverted, vertical };
     return (react_1.default.createElement(ResponderView_1.default, { ...others, ref: forwardedRef, maximumValue: maximumValue, minimumValue: minimumValue, step: step, onPress: onPress, onMove: onMove, onRelease: onRelease, enabled: enabled, vertical: vertical, inverted: inverted },
         react_1.default.createElement(Track_1.default, { ...trackProps, color: minimumTrackTintColor, style: minStyle, length: percentage * 100, track: 'min' }),
-        react_1.default.createElement(Thumb_1.default, { ...thumbProps, updateValue: updateValue, value: value }),
+        percentage !== 1 ? react_1.default.createElement(Thumb_1.default, { ...thumbProps, updateValue: updateValue, value: value }) : null,
         react_1.default.createElement(Track_1.default, { ...trackProps, color: maximumTrackTintColor, style: maxStyle, length: (1 - percentage) * 100, track: 'max' }),
         react_1.default.createElement(Marks_1.default, { type: 'slider', ...marksProps })));
 });
diff --git a/dist/components/ResponderView.js b/dist/components/ResponderView.js
index 9c9c8765f517c31f977dc11e4c54b9d069ee7a82..cb3e9f52215f2a2f3b1e17999dadad17f0edd8b1 100644
--- a/dist/components/ResponderView.js
+++ b/dist/components/ResponderView.js
@@ -120,7 +120,7 @@ const ResponderView = react_1.default.forwardRef((props, ref) => {
     });
     const containerStyle = react_1.default.useMemo(() => [styleSheet[vertical ? 'vertical' : 'horizontal'], style], [vertical, style]);
     return (react_1.default.createElement(RN.View, { ...others, focusable: false, pointerEvents: 'box-only', ref: forwardRef, onLayout: onLayout, style: containerStyle, onStartShouldSetResponder: isEnabled, onMoveShouldSetResponder: isEnabled, onResponderGrant: onPress, onResponderRelease: onRelease, onResponderMove: onMove, onResponderTerminationRequest: keepResponder, onResponderTerminate: onRelease },
-        react_1.default.createElement(SliderView_1.default, { vertical: vertical, inverted: inverted }, props.children)));
+        react_1.default.createElement(SliderView_1.default, { vertical: vertical }, props.children)));
 });
 ResponderView.displayName = 'ResponderView';
 exports.default = react_1.default.memo(ResponderView);
diff --git a/dist/components/Thumb.js b/dist/components/Thumb.js
index f6b20d6fff19456405d65e40976cdccef58d3d74..007eccc8682bc899cab9dae06f00b6f479647674 100644
--- a/dist/components/Thumb.js
+++ b/dist/components/Thumb.js
@@ -80,7 +80,6 @@ function getThumbStyle(size, color) {
             backgroundColor: color,
             borderRadius: size / 2,
             overflow: 'hidden',
-            elevation: 2,
             zIndex: 10
         }
     }).thumb;
diff --git a/dist/components/Track.js b/dist/components/Track.js
index 41517e995d9403c0f435dc0fe98e058af6e36176..69b3beb69c8e301c3f8b48cd58ab358dbcac2580 100644
--- a/dist/components/Track.js
+++ b/dist/components/Track.js
@@ -38,12 +38,13 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 const react_1 = __importDefault(require("react"));
 const RN = __importStar(require("react-native"));
-function getTrackStyle(length, thickness, color, vertical) {
+function getTrackStyle(length, thickness, color, vertical, track) {
     return RN.StyleSheet.create({
         thumb: {
             flexGrow: length,
             flexBasis: 0,
-            borderRadius: thickness / 2,
+            [track === 'min' ? "borderTopLeftRadius" : "borderTopRightRadius"]: thickness / 2,
+            [track === 'min' ? "borderBottomLeftRadius" : "borderBottomRightRadius"]: thickness / 2,
             backgroundColor: color,
             // This is for web
             // eslint-disable-next-line @typescript-eslint/ban-ts-comment
@@ -55,7 +56,7 @@ function getTrackStyle(length, thickness, color, vertical) {
 }
 const Track = ({ style, thickness, length, vertical, color = 'grey', CustomTrack, track }) => {
     const trackViewStyle = react_1.default.useMemo(() => [
-        getTrackStyle(length, thickness, color, vertical), style
+        getTrackStyle(length, thickness, color, vertical, track), style
     ], [length, thickness, color, vertical, style]);
     return CustomTrack ? react_1.default.createElement(CustomTrack, { style: trackViewStyle, color: color, length: length, thickness: thickness, vertical: vertical, track: track }) : react_1.default.createElement(RN.View, { style: trackViewStyle });
 };
