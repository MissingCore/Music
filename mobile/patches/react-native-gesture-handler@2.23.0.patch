diff --git a/lib/typescript/components/Swipeable.d.ts b/lib/typescript/components/Swipeable.d.ts
index 0cbe84fa9b660017825c91e8d6fc255ce696dfa0..d791099131bb617f64598201e6f7b676841a2c09 100644
--- a/lib/typescript/components/Swipeable.d.ts
+++ b/lib/typescript/components/Swipeable.d.ts
@@ -178,6 +178,7 @@ export default class Swipeable extends Component<SwipeableProps, SwipeableState>
     openLeft: () => void;
     openRight: () => void;
     reset: () => void;
+    resetIfNeeded: () => void;
     render(): React.JSX.Element;
 }
 export {};
diff --git a/src/components/Swipeable.tsx b/src/components/Swipeable.tsx
index e3b502e1c68667378cd0932929566359c1375ad9..d84fd68263a48ce8083bf7d7844b0d177dbdde9a 100644
--- a/src/components/Swipeable.tsx
+++ b/src/components/Swipeable.tsx
@@ -501,6 +501,22 @@ export default class Swipeable extends Component<
     this.setState({ rowState: 0 });
   };
 
+  resetIfNeeded = () => {
+    if (this.state.rowState !== 0) {
+      this.reset()
+    }
+  }
+
+  componentDidUpdate(prevProps: Readonly<SwipeableProps>, prevState: Readonly<SwipeableState>, snapshot?: any): void {
+    if (
+      prevProps.enabled !== this.props.enabled &&
+      this.props.enabled === false &&
+      this.state.rowState !== 0
+    ) {
+      this.close();
+    }
+  }
+
   render() {
     const { rowState } = this.state;
     const {
