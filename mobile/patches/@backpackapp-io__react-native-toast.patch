diff --git a/src/components/Toast.tsx b/src/components/Toast.tsx
index 8db6291cfb677830f285b2de6d8b0916d9258d7d..58394a0fa9c457d0c215ca3786e5bef7bcd9f025 100644
--- a/src/components/Toast.tsx
+++ b/src/components/Toast.tsx
@@ -1,6 +1,5 @@
 import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';
 import {
-  Platform,
   Pressable,
   Text,
   TextStyle,
@@ -42,6 +41,7 @@ type Props = {
   endPause: () => void;
   startPause: () => void;
   customRenderer?: (toast: ToastType) => React.ReactNode;
+  sheetOpts?: { height: number, needKeyboardOffset: boolean };
   overrideDarkMode?: boolean;
   onToastShow?: (toast: T) => void;
   onToastHide?: (toast: T) => void;
@@ -63,6 +63,7 @@ export const Toast: FC<Props> = ({
   offset,
   startPause,
   endPause,
+  sheetOpts,
   overrideDarkMode,
   onToastHide,
   onToastPress,
@@ -100,8 +101,8 @@ export const Toast: FC<Props> = ({
     () =>
       toast.position === ToastPosition.TOP
         ? -(toast.height || DEFAULT_TOAST_HEIGHT) - insets.top - 50
-        : height - insets.bottom - Platform.select({ ios: 0, default: 32 }),
-    [height, toast.position, insets.bottom, insets.top, toast.height]
+        : (sheetOpts?.height ?? height),
+    [sheetOpts?.height, height, toast.position, insets.top, toast.height]
   );
 
   const opacity = useSharedValue(0);
@@ -147,10 +148,9 @@ export const Toast: FC<Props> = ({
         ? startingY -
           toastHeight -
           offset -
-          kbHeight -
-          insets.bottom -
+          (sheetOpts?.needKeyboardOffset ? kbHeight : 0) -
           (extraInsets?.bottom ?? 0) -
-          24
+          16  // Offset from Android navbar
         : startingY;
 
       offsetY.value = animation(
@@ -163,12 +163,12 @@ export const Toast: FC<Props> = ({
       );
     }
   }, [
+    sheetOpts?.needKeyboardOffset,
     offset,
     toast.visible,
     keyboardVisible,
     keyboardHeight,
     toastHeight,
-    insets.bottom,
     position,
     startingY,
     toast.position,
@@ -261,6 +261,7 @@ export const Toast: FC<Props> = ({
           endPause();
         }}
         onPress={onPress}
+        pointerEvents="box-none"
         style={[
           {
             backgroundColor: !toast.customToast
@@ -288,6 +289,7 @@ export const Toast: FC<Props> = ({
               updateHeight(toast.id, event.nativeEvent.layout.height)
             }
             key={toast.id}
+            pointerEvents="box-none"
           >
             {toast.customToast({
               ...toast,
diff --git a/src/components/Toasts.tsx b/src/components/Toasts.tsx
index 09e1bdab9c0da0c40f1e21f715824ebe7b9f04eb..83f872e7bf453b3e1d56d2805f46107a374cf40e 100644
--- a/src/components/Toasts.tsx
+++ b/src/components/Toasts.tsx
@@ -13,6 +13,7 @@ import { useScreenReader } from '../utils';
 import { useKeyboard } from '../utils';
 
 type Props = {
+  sheetOpts?: { height: number, needKeyboardOffset: boolean };
   overrideDarkMode?: boolean;
   extraInsets?: ExtraInsets;
   onToastShow?: (toast: T) => void;
@@ -31,6 +32,7 @@ type Props = {
 };
 
 export const Toasts: FunctionComponent<Props> = ({
+  sheetOpts,
   overrideDarkMode,
   extraInsets,
   onToastHide,
@@ -56,10 +58,10 @@ export const Toasts: FunctionComponent<Props> = ({
     <View
       style={{
         position: 'absolute',
-        top: insets.top + (extraInsets?.top ?? 0) + 16,
+        top: sheetOpts ? 0 : insets.top + (extraInsets?.top ?? 0),
         left: insets.left + (extraInsets?.left ?? 0),
         right: insets.right + (extraInsets?.right ?? 0),
-        bottom: insets.bottom + (extraInsets?.bottom ?? 0) + 16,
+        bottom: insets.bottom + (extraInsets?.bottom ?? 0),
       }}
       pointerEvents={'box-none'}
     >
@@ -78,6 +80,7 @@ export const Toasts: FunctionComponent<Props> = ({
           offset={handlers.calculateOffset(t, {
             reverseOrder: true,
           })}
+          sheetOpts={sheetOpts}
           overrideDarkMode={overrideDarkMode}
           onToastHide={onToastHide}
           onToastPress={onToastPress}
